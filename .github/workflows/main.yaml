name: Build ONNX Runtime for Inference

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-onnx-runtime:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2025
            platform: windows-x64
            shell: cmd
          - os: windows-arm
            platform: windows-arm64
            shell: cmd
          - os: ubuntu-22.04
            platform: linux-x64
            shell: bash
          - os: ubuntu-22.04-arm
            platform: linux-arm64
            shell: bash
          - os: macos-15
            platform: macos
            sdk: macosx
            shell: bash
          - os: macos-15
            platform: ios
            sdk: iphoneos
            shell: bash
          - os: macos-15
            platform: ios-simulator
            sdk: iphonesimulator
            shell: bash

    steps:
      - name: Checkout ONNX Runtime
        uses: actions/checkout@v4
        with:
          repository: Microsoft/onnxruntime
          submodules: recursive

      - name: Setup Python - All Platforms
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Setup CMake - All Platforms
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '4.0.1'

      - name: Setup Xcode and Setup Command Line Tools - macOS/iOS
        if: matrix.platform == 'macos' || matrix.platform == 'ios' || matrix.platform == 'ios-simulator'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.3.0'

      - name: Determine SDK Path and set SDKROOT - macOS/iOS
        if: matrix.platform == 'macos' || matrix.platform == 'ios' || matrix.platform == 'ios-simulator'
        run: |
          sdk="${{ matrix.sdk }}"
          SDKROOT=$(xcrun --sdk $sdk --show-sdk-path)
          echo "SDKROOT=$SDKROOT" >> $GITHUB_ENV
          echo "Using SDK: $sdk"
        shell: bash

      - name: Setup Java - Android
        if: matrix.platform == 'linux-x64'
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Setup Android SDK/NDK - Android
        if: matrix.platform == 'linux-x64'
        uses: android-actions/setup-android@v3
        with:
          packages: 'platforms;android-36 ndk;27.2.12479018'
          accept-android-sdk-licenses: true

      - name: Build ONNX Runtime - Windows (x64)
        if: matrix.platform == 'windows-x64'
        run: .\build.bat --config Release --build_shared_lib --parallel --compile_no_warning_as_error --skip_submodule_sync
        shell: cmd

      - name: Build ONNX Runtime - Windows (arm64)
        if: matrix.platform == 'windows-arm64'
        run: .\build.bat --config Release --build_shared_lib --parallel --compile_no_warning_as_error --skip_submodule_sync
        shell: cmd

      - name: Build ONNX Runtime - Linux (x64) / Android (arm64-v8a / armeabi-v7a)
        if: matrix.platform == 'linux-x64'
        run: |
          # Linux x64
          ./build.sh --config Release --build_shared_lib --parallel --compile_no_warning_as_error --skip_submodule_sync
          # Android arm64-v8a
          ./build.sh --config Release --android --android_sdk_path $ANDROID_SDK_ROOT --android_ndk_path $ANDROID_NDK_ROOT --android_abi arm64-v8a --android_api 27 --skip_submodule_sync
          # Android armeabi-v7a
          ./build.sh --config Release --android --android_sdk_path $ANDROID_SDK_ROOT --android_ndk_path $ANDROID_NDK_ROOT --android_abi armeabi-v7a --android_api 27 --skip_submodule_sync
        shell: bash

      - name: Build ONNX Runtime - Linux (arm64)
        if: matrix.platform == 'linux-arm64'
        run: ./build.sh --config Release --build_shared_lib --parallel --compile_no_warning_as_error --skip_submodule_sync
        shell: bash

      - name: Build ONNX Runtime - macOS (x86_64 / arm64)
        if: matrix.platform == 'macos'
        run: |
          # macOS fat binary (x86_64 + arm64)
          ./build.sh --config Release --build_shared_lib --parallel --compile_no_warning_as_error --skip_submodule_sync --use_xcode --cmake_extra_defines CMAKE_OSX_ARCHITECTURES="x86_64;arm64"
        shell: bash

      - name: Build ONNX Runtime - iOS Device (arm64)
        if: matrix.platform == 'ios'
        run: |
          ./build.sh --config Release --use_xcode --ios --apple_sysroot iphoneos --osx_arch arm64 --apple_deploy_target 13.0 --skip_submodule_sync
        shell: bash

      - name: Build ONNX Runtime - iOS Simulator (x86_64)
        if: matrix.platform == 'ios-simulator'
        run: |
          ./build.sh --config Release --use_xcode --ios --apple_sysroot iphonesimulator --osx_arch x86_64 --apple_deploy_target 13.0 --skip_submodule_sync
        shell: bash

      - name: Upload Artifacts - ${{ matrix.platform }}
        uses: actions/upload-artifact@v4
        with:
          name: onnx-runtime-${{ matrix.platform }}
          path: |
            build/*/RelWithDebInfo/lib/*
            build/*/RelWithDebInfo/bin/*